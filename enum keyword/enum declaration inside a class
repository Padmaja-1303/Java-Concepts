/*Enumerations serve the purpose of representing a group of named constants in a programming language. 
For example, the 4 suits in a deck of playing cards may be 4 enumerators named Club, Diamond, Heart, and Spade, 
belonging to an enumerated type named Suit.
Other examples include natural enumerated types (like the planets, days of the week, colors, directions, etc.). 

Enums are used when we know all possible values at compile-time, such as choices on a menu, 
rounding modes, command-line flags, etc. 
It is not necessary that the set of constants in an enum type stay fixed for all time.

In Java (from 1.5), enums are represented using enum data type. 
Java enums are more powerful than C/C++ enums.
In Java, we can also add variables, methods, and constructors to it. 
The main objective of enum is to define our own data types(Enumerated Data Types).

Declaration of enum in Java:
Enum declaration can be done outside a Class or inside a Class but not inside a Method.*/
// enum declaration inside a class.

public class Main
{
  enum Color 
  {
    RED,
    GREEN,
    BLUE;
  }
  public static void main(String[] args)
  {
    Color c1 = Color.RED;
    System.out.println(c1);
  }
}

